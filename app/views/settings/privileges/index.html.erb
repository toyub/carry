<div class="main_top">
  <h2>权限设置</h2>
</div>

<div class="details">

  <div class="details_nav">
    <ul>
      <li class="bg-color-fff"><a href="#" class="width-90">用户配置</a></li>
    </ul>
  </div>

  <div class="details_content user_setting">
    <table id="privileges">
      <thead>
        <tr>
          <th>#</th>
          <th>用户</th>
          <th>职务</th>
          <th>部门</th>
          <th>角色</th>
        </tr>
      </thead>
      <tbody>
      </tbody>
    </table>

    <div class="roles_options" style="display:none;">
      <span class="roles_selected">管理员</span>

      <ul class="role_opts">
        <li><label>管理员</label><input type="checkbox"></li>
        <li><label>门店经理</label><input type="checkbox"></li>
        <li><label>收银员</label><input type="checkbox"></li>
        <li><label>出纳员</label><input type="checkbox"></li>
        <li><label>库管员</label><input type="checkbox"></li>
        <li><label>销售员</label><input type="checkbox"></li>
        <li><label>财务员</label><input type="checkbox"></li>
      </ul>

      <span class="display-block height-40 line-height-40 text-align-center">请选择角色</span>
    </div>

  </div>

</div>

<% content_for :javascripts do %>
  <script>
    jQuery(function($){

      var roles = [
        {code: 0, name: '管理员'},
        {code: 1, name: '门店经理'},
        {code: 2, name: '收银员'},
        {code: 3, name: '出纳员'},
        {code: 4, name: '库管员'},
        {code: 5, name: '销售员'},
        {code: 6, name: '财务员'}
      ]

      var Model = Backbone.Model.extend({
        toJSON: function(){
          res = {}
          json = _.clone(this.attributes);
          res['store_staff'] = json;
          return res;
        }
      });

      var rolesCollection = Backbone.Collection.extend({
        model: roleModel
      });

      var roleModel = Backbone.Model.extend({
        initialize: function(){
          this.parseRoles();
        },

        parseRoels: function(){
          this.roles = new rolesCollection(this.get('roles'));
        }
      });

      var Collection = Backbone.Collection.extend({
        url: '/api/store_staff',

        model: Model,

        comparator: 'id'
      });

      var listView = Backbone.View.extend({
        tagName: 'tr',

        template: JST['settings/privileges/list'],

        events: {
          'click .do_sel': 'renderDialog'
        },

        render: function(){
          console.log(JSON.stringify(this.model));
          this.$el.html(this.template(this.model.attributes));
          return this;
        },

        renderDialog: function(){
          console.log(roles);
          var view = new modalDialogView({model: this.model});
          $(".user_setting").append(view.render().el);
        }
      });

      var modalDialogView = Backbone.View.extend({
        className: 'roles_options',
        tagName: 'div',

        template: JST['settings/privileges/modaldialog'],

        initialize: function(){
          this.model.on('change', this.changeAlert, this);
        },

        changeAlert: function(){
          console.log("change roles");
        },

        events: {
          'change input[type="checkbox"]': 'selRoles'
        },

        render: function(){

          this.$el.html(this.template({staff: this.model, roles: roles}));
          console.log('render modalDialogView');
          return this;
        },

        selRoles: function(e){
          var roles_arr = this.model.get('roles') || [];
          if($(e.target).prop('checked') == true){
            roles_arr.push($(e.target).siblings().text());
          }else{
            roles_arr.splice($.inArray($(e.target).siblings().text(),roles_arr),1);
          }
          this.$el.find('.roles_selected').html(roles_arr.join(' '));
          this.model.save('roles', roles_arr);
        }

      });


      var View = Backbone.View.extend({
        el: 'body',

        initialize: function(){

        },

        render: function(){
          this.collection.each(this.renderList, this);
          return this;
        },

        renderList: function(staff){
          var view = new listView({model: staff});
          this.$el.find("tbody").append(view.render().el);
        },


      });

      var staffers = new Collection();
      staffers.fetch({success: function(){
        var view = new View({collection: staffers});
        view.render();
      }});
    });
  </script>
<% end %>
